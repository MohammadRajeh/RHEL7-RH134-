Scheduling One-Time tasks with at:
# systemctl status atd                          (installed and enabled by default)
# at 16:30
#sudo tail -f /var/log/messages
at> logger "Hello at 4:30 PM"
at> ctrl+d
# atq                                           (Query all at queues)
# atrm 1                                        (Remove job number 1)
OR
#at now +5min
at> touch /root/file.txt
at>ctl+d
# at -l                                         (Query all at queues)
# at -d 2                                       (Remove job number 2)

# at 12:07pm 
# at teaztime tomorrow                         (Tea time is 16:00)
# at noon +4 days
# at 5pm august 16 2016

# ls /var/spool/at/                             (Holds the jobs script files)
# at -c 6                                       (Inspect the actual commands that will run when a job is executed)


Note:
    - unprivileged users can only see control thier own jobs. root can see all jobs.
    =================================================================================================================

Scheduling Recurring Jobs with cron:
# systemctl status crond                        (Installed and enabled by default)
crontab -e                                      (vi editor will be started)
# command line                                  (optional)
Minutes                     Hours               Day-of-Month                Month       Day-of-Week         Command


- * for always
- A number 
- x-y for a range
- x,y for lists
- */x to indicate an interval of x              (*/7 in the minutes column will run a jobs exactly every seven minuts)
- Three-letter abbreviations can be used for both month and Week-days.
- If the command contains an unescaped(%) that % will be treated as a newline, and everything after the % will be fed to the command on stdin.

Ex 
0  9  2  2  * /usr/local/bin/yearly_backup
*/7 9-16 * Jul  5 echo "Hello"
58 23 * * 1-5 tar cf /root/etc.tar /etc
crontab  -l                                     (List the jobs for the current user)
crontab  -r                                     (Remove all  jobs for the current user)
crontab  -e -u mohd                             (Root can manage the jobs for another user)
crontab                                         (stdin will be used)
crontab  <file_Name>                            (Remove all jobs, and replace with the jobs read from file)

Note:
- If the commands run from a cron job produce any output to either stdout or stderr that is not redirected, the crond daemon will attempt to email that output to the user owing that job.


# vim /etc/crontab                          (Don't touch this file)
cron.d/      cron.deny/      cron.monthly/     cron.weekly/   cron.daily/            cron.hourly/       crontab
===============================================================================================
Scheduling System cron Jobs:
# vim /etc/crontab                  (not recommended to be used to schedule jobs)
# ls -d /etc/cron.*                 (predefined jobs that run every hours, day, week and month)


Note:
- Make sure to make any scripts you place in three directories executable.
- The /etc/anacrontab file will make sure that important jobs will always be run, and not skipped accidentaally because the system was turned off or hibernating.

========================================================
Managing Temporary Files:
- In the past. system administrators used a tool called tmpwatch old, unused tmp files.
- From RHEL7 systemd will start systemd-tmpfile-setup which is resposible for tmp fle.
# systemd-tmpfile-setup clean

- systemd-tmpfiles-clean.service will be started 15 min after systemd has started, and then once every file 24 hours afterwards.
- Files will be considered unused if timestapms (atime, mtime, ctime) are older than the systemd-tmpfile age configuration.
- The stat command can be run on a file to see the values of all three of its time stamps

# stsremd-tmpfiles --Remove
# vim /usr/lib/tmpfiles.d/tmp.conf                     (should be edited by system administrator)

d /run/systemd/seats 0755 root root -
D /home/student 0700 student student 1d
L /run/fstablink  - root root - /etc/fstab

- /tmp is under systemd-tmpfiles control. To override the upstream settings:
# cp /usr/lib/tmpfiles.d/tmp.conf  /etc/tmpfiles.d/
Then change the interval from d to d.
# systemd-tmpfiles --clean tmp.conf    (Test if systemd accepts the new configuration)




































